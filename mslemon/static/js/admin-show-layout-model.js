// Generated by CoffeeScript 1.6.3
(function() {
  $(document).ready(function() {
    var add_new_field_button, create_editor, div, editing_space, editor_template, field_for_model_selected, field_list, header_template, icon, input, label, model_field_url, renderable, select_field_widget, select_fields_for_model, span, strong, text;
    renderable = teacup.renderable;
    div = teacup.div;
    icon = teacup.i;
    strong = teacup.strong;
    span = teacup.span;
    label = teacup.label;
    input = teacup.input;
    text = teacup.text;
    editing_space = $('.editing-space');
    field_list = $('.field-list');
    add_new_field_button = $('.add-field-button');
    model_field_url = function(model_id, field_id) {
      var url;
      url = '/rest/admin/layoutmodels/' + model_id;
      url = url + '/fields/' + field_id;
      return url;
    };
    header_template = renderable(function(content) {
      return div('.btn.btn-default.btn-xs', function() {
        return text(content);
      });
    });
    editor_template = renderable(function(field_id) {
      return div({
        "field-id": field_id
      }, '#edit-status', function() {
        text('Editing field');
        div('#save-content.action-button', function() {
          return text('Save');
        });
        div('#cancel-button.action-button.pull-right', function() {
          return text('Cancel');
        });
        return div('#field-editor');
      });
    });
    select_field_widget = renderable(function(fields) {
      var classes;
      classes = '.listview-entry.action-button.add-this-field';
      return div('#select-fields.listview-list', function() {
        var divid, fid, field, _i, _len, _results;
        _results = [];
        for (_i = 0, _len = fields.length; _i < _len; _i++) {
          field = fields[_i];
          fid = '#field-' + field.id;
          divid = fid + classes;
          _results.push(div(divid, function() {
            return text(field.name);
          }));
        }
        return _results;
      });
    });
    field_for_model_selected = function(response) {
      $('#select-fields').remove();
      return window.location.reload();
    };
    select_fields_for_model = function(response) {
      var fields, html;
      fields = response.data;
      html = select_field_widget(fields);
      $('.header').append(html);
      return $('.add-this-field').click(function() {
        var btnid, data, elist, field_id, model_id, request, url;
        btnid = $(this).attr('id');
        elist = btnid.split('-');
        field_id = elist[1];
        model_id = $('input[name=model_id]').val();
        $('.header').html(model_id + '-' + field_id);
        url = '/rest/admin/layoutmodels/' + model_id;
        url = url + '/fields';
        data = {
          field_id: field_id
        };
        return request = $.post(url, data, field_for_model_selected, 'json');
      });
    };
    create_editor = function(model_id, field_id, ftype) {
      var cancel_button, content_callback, editor, fresh_edit, html, response, save_button, save_edit_error, session, url;
      html = editor_template(field_id);
      editing_space.html(html);
      field_list.hide();
      add_new_field_button.hide();
      editing_space.show();
      save_button = $('#save-content');
      save_button.hide();
      cancel_button = $('#cancel-button');
      cancel_button.click(function() {
        return window.location.reload();
      });
      editor = ace.edit('field-editor');
      TrumpetApp.editor = editor;
      session = editor.getSession();
      session.on('change', function() {
        return save_button.show();
      });
      if (ftype === 'html') {
        session.setMode('ace/mode/html');
      } else if (ftype === 'teacup') {
        session.setMode('ace/mode/coffee');
        session.setTabSize(4);
      }
      editor.setTheme('ace/theme/trumpet');
      url = model_field_url(model_id, field_id);
      content_callback = function(data, status, xhr) {
        if (status === 'success') {
          window.rdata = data;
          if (data.content !== null) {
            editor.setValue(data.content);
            return save_button.hide();
          }
        }
      };
      response = $.get(url, {}, content_callback);
      fresh_edit = function(data, status, xhr) {
        if (status === 'success') {
          save_button.hide();
        }
        TrumpetApp.rdata = data;
        TrumpetApp.rstatus = status;
        return TrumpetApp.rxhr = xhr;
      };
      save_edit_error = function(data, status, xhr) {
        TrumpetApp.rdata = data;
        TrumpetApp.rstatus = status;
        TrumpetApp.rxhr = xhr;
        return TrumpetApp.make_alert("Error in save");
      };
      return save_button.click(function() {
        var formdata;
        formdata = {
          update: 'submit',
          content: editor.getValue(),
          model_id: model_id,
          field_id: field_id
        };
        url = '/rest/admin/layoutmodels/';
        url = url + model_id + '/fields/' + field_id;
        return $.ajax(url, {
          type: 'PUT',
          data: formdata,
          success: fresh_edit,
          error: save_edit_error,
          dataType: 'json'
        });
      });
    };
    add_new_field_button.click(function() {
      var model_id, request, url;
      model_id = $('input[name=model_id]').val();
      url = '/rest/admin/layoutfields';
      return request = $.get(url, {}, select_fields_for_model, 'json');
    });
    $('.edit-button').click(function() {
      var btnid, elist, field_id, ftype, model_id, oldtext;
      btnid = $(this).attr('id');
      elist = btnid.split('-');
      field_id = elist[1];
      model_id = $('input[name=model_id]').val();
      oldtext = $('.header').text();
      ftype = $(this).attr('field-type');
      create_editor(model_id, field_id, ftype);
      if (TrumpetApp.editor !== null) {
        TrumpetApp.editor.destroy();
      }
      if (oldtext === 'Ms. Lemon') {
        return $('.header').html(header_template('FOoo-' + id));
      } else {
        return $('.header').html(header_template('Ms. Lemon'));
      }
    });
    $('.delete-button').click(function() {
      var btnid, delete_field_success, elist, field_id, formdata, id, model_id, oldtext, url;
      model_id = $('input[name=model_id]').val();
      btnid = $(this).attr('id');
      elist = btnid.split('-');
      id = elist[1];
      field_id = id;
      oldtext = $('.header').text();
      if (oldtext === 'Ms. Lemon') {
        $('.header').html(header_template('Delete-' + id));
      } else {
        $('.header').html(header_template('Ms. Lemon'));
      }
      formdata = {
        update: 'submit',
        model_id: model_id,
        field_id: field_id
      };
      url = '/rest/admin/layoutmodels/';
      url = url + model_id + '/fields/' + field_id;
      delete_field_success = function(data, status, xhr) {
        return window.location.reload();
      };
      return $.ajax(url, {
        type: 'DELETE',
        data: formdata,
        success: delete_field_success,
        dataType: 'json'
      });
    });
    return editing_space.hide();
  });

}).call(this);
