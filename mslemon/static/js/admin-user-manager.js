// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  jQuery(function() {
    var BaseCollection, BaseListView, BaseMainContentView, BaseModelView, Group, GroupList, GroupListView, MainGroupView, MainUserView, Router, SideView, User, UserGroupListView, UserList, UserListView, list_views, main_router, make_ug_collection, side_view, _ref, _ref1, _ref10, _ref11, _ref12, _ref13, _ref14, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9;
    list_views = function() {
      return {
        'user': UserListView,
        'group': GroupListView
      };
    };
    Router = (function(_super) {
      __extends(Router, _super);

      function Router() {
        _ref = Router.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      Router.prototype.routes = {
        '': 'home',
        'view/:listview': 'listview'
      };

      Router.prototype.common = function() {
        var s;
        s = side_view;
        s.render();
        if (s.current_view !== null) {
          return s.current_view.remove();
        }
      };

      Router.prototype.home = function() {
        return this.common();
      };

      Router.prototype.listview = function(lview) {
        var klass, view;
        this.common();
        console.log('lview is ' + lview);
        klass = list_views()[lview];
        window.klass = klass;
        view = new klass;
        view.render({
          type: lview
        });
        return side_view.current_view = view;
      };

      return Router;

    })(Backbone.Router);
    User = (function(_super) {
      __extends(User, _super);

      function User() {
        _ref1 = User.__super__.constructor.apply(this, arguments);
        return _ref1;
      }

      User.prototype.type = Backbone.HasMany;

      User.prototype.relatedModel = 'Group';

      User.prototype.collectionType = 'UserList';

      User.prototype.defaults = {
        objtype: 'user'
      };

      return User;

    })(Supermodel.Model);
    Group = (function(_super) {
      __extends(Group, _super);

      function Group() {
        _ref2 = Group.__super__.constructor.apply(this, arguments);
        return _ref2;
      }

      Group.prototype.defaults = {
        objtype: 'group'
      };

      return Group;

    })(Backbone.RelationalModel);
    BaseCollection = (function(_super) {
      __extends(BaseCollection, _super);

      function BaseCollection() {
        _ref3 = BaseCollection.__super__.constructor.apply(this, arguments);
        return _ref3;
      }

      BaseCollection.prototype.parse = function(response) {
        return response.data;
      };

      return BaseCollection;

    })(Backbone.Collection);
    UserList = (function(_super) {
      __extends(UserList, _super);

      function UserList() {
        _ref4 = UserList.__super__.constructor.apply(this, arguments);
        return _ref4;
      }

      UserList.prototype.model = User;

      UserList.prototype.url = '/rest/users';

      return UserList;

    })(BaseCollection);
    GroupList = (function(_super) {
      __extends(GroupList, _super);

      function GroupList() {
        _ref5 = GroupList.__super__.constructor.apply(this, arguments);
        return _ref5;
      }

      GroupList.prototype.model = Group;

      GroupList.prototype.url = '/rest/groups';

      GroupList.prototype.parse = function(response) {
        return response.data;
      };

      return GroupList;

    })(BaseCollection);
    make_ug_collection = function(user_id) {
      var uglist, _ref6;
      uglist = (function(_super) {
        __extends(uglist, _super);

        function uglist() {
          _ref6 = uglist.__super__.constructor.apply(this, arguments);
          return _ref6;
        }

        uglist.prototype.model = Group;

        uglist.prototype.url = '/rest/users/' + user_id + '/groups';

        return uglist;

      })(BaseCollection);
      return new uglist;
    };
    BaseModelView = (function(_super) {
      __extends(BaseModelView, _super);

      function BaseModelView() {
        _ref6 = BaseModelView.__super__.constructor.apply(this, arguments);
        return _ref6;
      }

      BaseModelView.prototype.template = TrumpetApp.admin_usrmgr_tmpl.entry;

      BaseModelView.prototype.initialize = function() {
        _.bindAll(this, 'render');
        this.model.bind('change', this.render);
        return this.model.bind('remove', this.unrender);
      };

      BaseModelView.prototype.render = function() {
        var html, tmpl, tmplbox;
        tmplbox = TrumpetApp.admin_usrmgr_tmpl;
        if (this.model.has('username')) {
          tmpl = tmplbox.user_entry;
        } else {
          tmpl = tmplbox.entry;
        }
        html = tmpl.render(this.model.attributes);
        this.$el.html(html);
        return this;
      };

      BaseModelView.prototype.unrender = function() {
        return $(this.el).remove();
      };

      BaseModelView.prototype.events = {
        'click .show-entry-btn': 'showentry'
      };

      BaseModelView.prototype.showentry = function() {
        var el, html, view;
        el = $('.listview-list');
        if (this.model.get('objtype') === 'user') {
          view = new MainUserView;
        } else {
          view = new MainGroupView;
        }
        html = view.render(this.model.attributes);
        return el.html(html);
      };

      return BaseModelView;

    })(Backbone.View);
    BaseMainContentView = (function(_super) {
      __extends(BaseMainContentView, _super);

      function BaseMainContentView() {
        _ref7 = BaseMainContentView.__super__.constructor.apply(this, arguments);
        return _ref7;
      }

      BaseMainContentView.prototype.el = $('.right-column-content');

      BaseMainContentView.prototype.remove = function() {
        this.undelegateEvents();
        this.$el.empty();
        this.stopListening();
        return this.a;
      };

      return BaseMainContentView;

    })(Backbone.View);
    MainUserView = (function(_super) {
      __extends(MainUserView, _super);

      function MainUserView() {
        _ref8 = MainUserView.__super__.constructor.apply(this, arguments);
        return _ref8;
      }

      MainUserView.prototype.render = function(user) {
        var tmpl;
        tmpl = TrumpetApp.admin_usrmgr_tmpl.main_user_view;
        this.$el.html(tmpl.render(user));
        return this;
      };

      return MainUserView;

    })(BaseMainContentView);
    MainGroupView = (function(_super) {
      __extends(MainGroupView, _super);

      function MainGroupView() {
        _ref9 = MainGroupView.__super__.constructor.apply(this, arguments);
        return _ref9;
      }

      MainGroupView.prototype.render = function(group) {
        var tmpl;
        tmpl = TrumpetApp.admin_usrmgr_tmpl.main_group_view;
        this.$el.html(tmpl.render(group));
        return this;
      };

      return MainGroupView;

    })(BaseMainContentView);
    BaseListView = (function(_super) {
      __extends(BaseListView, _super);

      function BaseListView() {
        this.appendItem = __bind(this.appendItem, this);
        _ref10 = BaseListView.__super__.constructor.apply(this, arguments);
        return _ref10;
      }

      BaseListView.prototype.render = function(data) {
        var tmpl;
        tmpl = TrumpetApp.admin_usrmgr_tmpl.listview;
        this.$el.html(tmpl.render(data));
        return this;
      };

      BaseListView.prototype.modelView = BaseModelView;

      BaseListView.prototype.appendItem = function(model) {
        var html, view;
        view = new this.modelView({
          model: model
        });
        html = view.render(model).el;
        return $('.listview-list').append(html);
      };

      BaseListView.prototype.events = {
        'click .add-entry-btn': 'new_entry_view'
      };

      BaseListView.prototype.new_entry_view = function() {
        var html, mclass, model, tmpl;
        mclass = this.collection.model;
        model = new mclass();
        tmpl = TrumpetApp.admin_usrmgr_tmpl.create;
        html = tmpl.render(model.attributes);
        return $('.listview-list').html(html);
      };

      return BaseListView;

    })(BaseMainContentView);
    UserListView = (function(_super) {
      __extends(UserListView, _super);

      function UserListView() {
        this.appendItem = __bind(this.appendItem, this);
        _ref11 = UserListView.__super__.constructor.apply(this, arguments);
        return _ref11;
      }

      UserListView.prototype.initialize = function() {
        console.log('Init UserListView');
        this.collection = new UserList;
        this.collection.bind('add', this.appendItem);
        return this.collection.fetch();
      };

      UserListView.prototype.appendItem = function(model) {
        var html, view;
        view = new this.modelView({
          model: model
        });
        window.mbview = view;
        html = view.render(model).el;
        return $('.listview-list').append(html);
      };

      return UserListView;

    })(BaseListView);
    GroupListView = (function(_super) {
      __extends(GroupListView, _super);

      function GroupListView() {
        _ref12 = GroupListView.__super__.constructor.apply(this, arguments);
        return _ref12;
      }

      GroupListView.prototype.initialize = function() {
        console.log('Init GroupListView');
        this.collection = new GroupList;
        this.collection.bind('add', this.appendItem);
        return this.collection.fetch();
      };

      return GroupListView;

    })(BaseListView);
    UserGroupListView = (function(_super) {
      __extends(UserGroupListView, _super);

      function UserGroupListView() {
        _ref13 = UserGroupListView.__super__.constructor.apply(this, arguments);
        return _ref13;
      }

      UserGroupListView.prototype.initialize = function(user_id) {
        console.log('Init UserGroupListView');
        this.collection = make_ug_collection(user_id);
        this.collection.bind('add', this.appendItem);
        return this.collection.fetch();
      };

      return UserGroupListView;

    })(Backbone.View);
    SideView = (function(_super) {
      var pull_trigger;

      __extends(SideView, _super);

      function SideView() {
        _ref14 = SideView.__super__.constructor.apply(this, arguments);
        return _ref14;
      }

      SideView.prototype.el = $('.sidebar');

      SideView.prototype.initialize = function() {
        return this.current_view = null;
      };

      SideView.prototype.render = function() {
        var tmpl;
        tmpl = TrumpetApp.admin_usrmgr_tmpl.side_view;
        $(this.el).html(tmpl.render());
        return this;
      };

      pull_trigger = {
        trigger: true,
        replace: true
      };

      SideView.prototype.events = {
        'click .home-button': function() {
          return main_router.navigate('', pull_trigger);
        },
        'click .users-button': function() {
          $('.listview-list').remove();
          main_router.navigate('dummy', pull_trigger);
          return main_router.navigate('view/user', pull_trigger);
        },
        'click .groups-button': function() {
          $('.listview-list').remove();
          main_router.navigate('dummy', pull_trigger);
          return main_router.navigate('view/group', pull_trigger);
        }
      };

      return SideView;

    })(Backbone.View);
    main_router = new Router;
    side_view = new SideView;
    return Backbone.history.start();
  });

}).call(this);
